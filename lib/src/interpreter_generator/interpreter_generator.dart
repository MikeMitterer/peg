part of peg.interpreter_generator;

class InterpreterGenerator extends TemplateGenerator {
  static const int LOOKAHEAD_CHAR_COUNT = 0;

  static const String _TEMPLATE = 'TEMPLATE';

  static final String _template = '''
// This code was generated by a tool.
// Processing tool available at https://github.com/mezoni/peg

{{#GLOBALS}}
{{#PARSER}}
''';

  final bool comment;

  final Grammar grammar;

  final bool memoize;

  final String name;

  final bool trace;

  InterpreterClassGenerator _interpreterClassGenerator;

  InterpreterGenerator(this.name, this.grammar, {this.comment: false, this.memoize: false, this.trace: false}) {
    if (name == null || name.isEmpty) {
      throw new ArgumentError('name: $name');
    }

    if (grammar == null) {
      throw new ArgumentError('grammar: $grammar');
    }

    if (comment == null) {
      throw new ArgumentError('comments: $comment');
    }

    if (memoize == null) {
      throw new ArgumentError('memoize: $memoize');
    }

    addTemplate(_TEMPLATE, _template);
    _interpreterClassGenerator = new InterpreterClassGenerator(name, grammar, this);
  }

  InterpreterClassGenerator get interpreterClassGenerator {
    return _interpreterClassGenerator;
  }

  List<String> generate() {
    var block = getTemplateBlock(_TEMPLATE);
    block.assign('#GLOBALS', Utils.codeToStrings(grammar.globals));
    block.assign('#PARSER', _interpreterClassGenerator.generate());
    return block.process();
  }
}
